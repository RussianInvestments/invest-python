[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "tinkoff-investments"
version = "0.2.0-beta101"
description = "Tinkoff Python SDK"
authors = ["Tinkoff Team <python@tinkoff.ru>"]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/RussianInvestments/invest-python"
homepage = "https://github.com/RussianInvestments/invest-python"
packages = [
  {include = "tinkoff"}
]
exclude = ["tinkoff/__init__.py"]

[tool.poetry.dependencies]
python = "^3.8.1"
cachetools = "^5.2.0"
grpcio = "^1.59.3"
protobuf = "^4.25.1"
python-dateutil = "^2.8.2"
tinkoff = "^0.1.1"
deprecation = "^2.1.0"
matplotlib = {version = "^3.5.1", optional = true}
mplfinance = {version = "^0.12.8-beta.9", optional = true}
numpy = {version = "^1.22.2", optional = true}
pandas = {version = ">=1.4.0", optional = true}

[tool.poetry.extras]
all = ["pandas", "numpy", "matplotlib", "mplfinance"]

[tool.poetry.group.bump.dependencies]
PyYAML = "^6.0"
tomlkit = "^0.12.3"

[tool.poetry.group.dev.dependencies]
black = {extras = ["jupyter"], version = "^23.7.0"}
codecov = "^2.1.12"
grpcio-tools = "^1.59.3"
ipython = "^8.1.1"
isort = "^5.10.1"
mypy = "^1.7.1"
mypy-protobuf = "^3.5.0"
pytest = "^7.4.3"
pytest-asyncio = "^0.23.2"
pytest-cov = "^4.1.0"
pytest-deadfixtures = "^2.2.1"
pytest-freezegun = "^0.4.2"
pytest-mock = "^3.12.0"
requests = "^2.27.1"
ruff = "^0.1.6"
types-cachetools = "^5.2.1"
types-protobuf = "^4.23.0.4"
types-python-dateutil = "^2.8.12"
types-PyYAML = "^6.0.7"
types-requests = "^2.27.7"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5"
mkdocs-include-markdown-plugin = "^6.0.4"
mkdocs-material = "^9.4.14"
mkdocstrings = {version = "^0.24.0", extras = ["python"]}
termynal = "^0.11.1"

[tool.pytest.ini_options]
testpaths = "tests"
addopts = "--strict-markers --showlocals --verbosity 2"
log_level = "DEBUG"
asyncio_mode = "auto"

[tool.ruff]
line-length = 88
select = [
  "D",
  "B",
  "C",
  "E",
  "F",
  "Q",
  "RUF001",
  "T",
  "W"
]
ignore = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "D203",
  "D213",
  "B008",
  "B905",
  "Q000"
]
exclude = [
  "tinkoff/invest/grpc",
  "examples/*"
]

[tool.black]
exclude = "tinkoff/invest/grpc"

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 64
exclude_lines = [
  "raise NotImplementedError",
  "def __repr__",
  "pragma: no cover"
]
omit = [
  "*/.local/*",
  "tests/*",
  "**/__main__.py"
]
branch = true
source = "tinkoff"

[tool.isort]
profile = "black"
multi_line_output = 3
combine_as_imports = true

[tool.mypy]
ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true
exclude = ['venv', '.venv']

[[tool.mypy.overrides]]
module = ["tests.*", "examples.*"]
check_untyped_defs = false

[[tool.mypy.overrides]]
module = ["tinkoff.invest.caching.instruments_cache.*", "tinkoff.invest.mock_services.*"]
ignore_errors = true
